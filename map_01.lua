require("libs.colliderLib")
require("libs.data_reader")

map = nil

divisions = 10

grid = {}

Player = {}

Player.hasCamped = false
Player.capitalX = -1
Player.capitalY = -1
Player.food = 100
Player.quality = 0
Player.humans = 1
Player.fps = 0
Player.rsps = 0
Player.hps = (Player.humans + (Player.rsps / 10)) / 4
Player.qualityBoost = 1
Player.lb = 1
Player.money = 50
Player.price_drop_for_food = 0
Player.price_drop_for_ressources = 0

local locked = true

xgrid = math.floor(love.mouse.getX() / (720 / divisions))
ygrid = math.floor(love.mouse.getY() / (720 / divisions))


Debug = {}

Debug.programmer = false
Debug.DebugMode = true

Game = {}
Game.time = 0
Game.showShop = false

local function load_config()
    print("LOAD CONFIGURATION")
    if Debug.programmer == false then
        io.input(World)
        local text = io.read("*a")
        -- print(text)
        
        local list = {}
        local index = 1
        for token in string.gmatch(text, "[^,]+") do
            if token == "" then
            else
                list[index] = {}
                list[index].text = token
                list[index].values = {}
                index = index + 1
            end

        end

        tokenIndex = 1
        for i = 1,index - 1, 1 do
            local currentIndex = 1
            for tok in string.gmatch(list[i].text, "[^:]+") do
                list[i].values[currentIndex] = tok
                -- print(tok)
                currentIndex = currentIndex + 1
            end
        end

        for i = 1,index - 1, 1 do
            local x = 0; local y = 0; local type = 0
            for j = 1, 3, 1 do
                if j == 1 then
                    x = tonumber(list[i].values[j])
                elseif j == 2 then
                    y = tonumber(list[i].values[j])
                elseif j == 3 then
                    type = tonumber(list[i].values[j])
                end
            end
            -- print(x, y, type)
            if type == 0 then
                grid[x][y].type = "grass"
            elseif type == 1 then
                grid[x][y].type = "desert"
            elseif type == 2 then
                grid[x][y].type = "farm"
            elseif type == 3 then
                grid[x][y].type = "water"
            end
        end
    else
        return "Programmer Mode"
    end
end

function onload()
    World = nil
    if Debug.programmer then
        World = io.open("data/config.cfg", "w+")
    else
        World = io.open("data/config.cfg", "r")
    end
    
    map = love.graphics.newImage("gfx/map.png")
    count = 0
    for x = 1, divisions, 1 do
        grid[x] = {}
        for y = 1, divisions, 1 do
            count = count + 1
            grid[x][y] = {}
            grid[x][y].built = false
            grid[x][y].canBuild = false
            grid[x][y].type = "nil"
            -- print(grid[x][y].built, count)
        end
    end
    
    print(load_config())

    --[[for x = 1, divisions, 1 do
        for y = 1, divisions, 1 do
            print(grid[x][y].type)
        end
    end]]

    Farm_GFX = love.graphics.newImage("gfx/farm.png")
    House_GFX = love.graphics.newImage("gfx/house.png")
    Pyramid_GFX = love.graphics.newImage("gfx/pyramid.png")
    Bread_GFX = love.graphics.newImage("gfx/bread.png")
    Human_GFX = love.graphics.newImage("gfx/stickman.png")
    QualityOfWapon_GFX = love.graphics.newImage("gfx/qualite.png")
    Coin_GFX = love.graphics.newImage("gfx/coin.png")

    Farm_Cap_GFX = love.graphics.newImage("gfx/windmill.png")
    Forest_Cap_GFX = love.graphics.newImage("gfx/big_house.png")
    Desert_Cap_GFX = love.graphics.newImage("gfx/pyramid_richer.png")

    Data_Reader.read("data/land.dat", "data/stats.dat")
end

local function map_typeToNumber(type)
    if type == "grass" then
        return "0"
    elseif type == "farm" then
        return "2"
    elseif type == "desert" then
        return "1"
    elseif type == "water" then
        return "3"
    elseif type == "nil" then
        return "4"
    end
end

function string.appendString(stringA, stringB)
    return stringA..stringB
end

local function save()

    local saveGrid = {}
    for x = 1, divisions, 1 do
        saveGrid[x] = {}
        for y = 1, divisions, 1 do
            saveGrid[x][y] = {}
        end
    end

    for x = 1, divisions, 1 do
        for y = 1, divisions, 1 do
            local type_ = grid[x][y].type

            if (type_ == "grass") then
                saveGrid[x][y].type = map_typeToNumber(type_)
                if saveGrid[x][y].type == nil then
                    saveGrid[x][y].type = "nil"
                end
            end
        end
    end

    local textToConfig = ""

    for _x = 1, divisions, 1 do
        for _y = 1, divisions, 1 do
            textToConfig = string.appendString(textToConfig,_x)
            textToConfig = string.appendString(textToConfig,":")
            textToConfig = string.appendString(textToConfig,_y)
            textToConfig = string.appendString(textToConfig,":")
            textToConfig = string.appendString(textToConfig,map_typeToNumber(grid[_x][_y].type))
            textToConfig = string.appendString(textToConfig, ",")
        end
    end
    io.output(World)
    io.write(textToConfig)
end
time = 0
function Update(dt)
    UpdateClicks()
    if locked then
        time = time + dt
        if time >= 0.3 then locked = false; time = 0 end
    else

        xgrid = math.floor(love.mouse.getX() / (720 / divisions))
        ygrid = math.floor(love.mouse.getY() / (720 / divisions))
        
        -- print("X: ", xgrid, ", Y: ", ygrid)
    
        --[[if Player.food > 200 then
            Player.humans = Player.humans + 1
            Player.hps = Player.humans / 4
            Player.food = 50
            if (Debug.DebugMode) then
                print("FPS: "..Player.fps)
                print("HPS: "..Player.hps)
            end
        end--]]
    
        if Player.food <= 0 then
            print("GAME OVER")
        end
    
        if Game.showShop == false then
    
            if love.mouse.isDown(1) and not Player.hasCamped and grid[xgrid+1][ygrid+1].type ~= "water" then
                grid[xgrid+1][ygrid+1].built = true
                print(grid[xgrid+1][ygrid+1].built)
                Player.hasCamped = true
                Player.capitalX = xgrid
                Player.capitalY = ygrid
                local current_type = grid[xgrid+1][ygrid+1].type
                if (current_type == "grass") then
                    Player.fps = Player.fps + 0.3
                    Player.rsps = Player.rsps + 0.3 * Player.qualityBoost
                elseif current_type == "farm" then
                    Player.fps = Player.fps + 0.7
                    Player.rsps = Player.rsps + 0.1 * Player.qualityBoost
                elseif current_type == "desert" then
                    Player.rsps = Player.rsps + 0.7 * Player.qualityBoost
                    Player.fps = Player.fps + 0.1
                end
                Player.hps = (Player.humans + (Player.rsps / 10)) / 4
                
                if (Debug.DebugMode) then
                    print("FPS: "..Player.fps)
                    print("HPS: "..Player.hps)
                end
                
            end
            if Debug.programmer == false then
            else
                if love.keyboard.isDown("f") then
                    grid[xgrid+1][ygrid+1].type = "farm"
                end
                if love.keyboard.isDown("g") then
                    grid[xgrid+1][ygrid+1].type = "grass"
                end
                if love.keyboard.isDown("d") then
                    grid[xgrid+1][ygrid+1].type = "desert"
                end
                if love.keyboard.isDown("w") then
                    grid[xgrid+1][ygrid+1].type = "water"
                end
            end
    
            
    
            Game.time = Game.time + dt
            if Game.time >= 1 and Player.hasCamped then
                Player.quality = Player.quality + Player.rsps
            end
            if Game.time >= 1 and Player.hasCamped == true then
                local current = Player.fps * Player.humans - Player.hps
                Player.food = Player.food + current
                
                Game.time = 0
            end
    
            for _x = 1, divisions, 1 do
                for _y = 1, divisions, 1 do
                    
                    if grid[_x][_y].built == true then
                        
    
    
                        if _x-2 >= 1 and grid[_x-1][_y].built == false then
                            grid[_x-2][_y-1].canBuild = true
                            
                        end
                        if _x+2 <= 10 and grid[_x+1][_y].built == false then
                            grid[_x][_y-1].canBuild = true
                        end
                        if _y-2 >= 1 and grid[_x][_y-1].built == false then
                            grid[_x-1][_y-2].canBuild = true
                            
                        end
                        if _y+2 <= 10 and grid[_x][_y+1].built == false then
                            grid[_x-1][_y].canBuild = true
                        end
                    end
                    --print(_x,_y,grid[_x][_y].type,grid[_x][_y].built,grid[_x][_y].canBuild)
                end
            end
    
            if Player.money >= (250 + (250 * Player.lb)) * 8-3000 then
                if ygrid > 1 and xgrid > 1 then
                    if grid[xgrid][ygrid].canBuild then
                        if love.mouse.isDown(1) then
                            local current_type = grid[xgrid][ygrid].type
                            if (current_type == "grass") then
                                Player.fps = Player.fps + 0.15
                                Player.rsps = Player.rsps + 0.15 * Player.qualityBoost
                            elseif current_type == "farm" then
                                Player.fps = Player.fps + 0.35
                                Player.rsps = Player.rsps + 0.05 * Player.qualityBoost
                            elseif current_type == "desert" then
                                Player.rsps = Player.rsps + 0.35 * Player.qualityBoost
                                Player.fps = Player.fps + 0.05
                            end
                            grid[xgrid+1][ygrid+1].built = true
                            Player.money = Player.money - (250 + (250 * Player.lb)) * 8-3000
                            Player.lb = Player.lb + 1
                            locked = true
                        end
                    end
                end
            end
        end
    
        if Game.showShop == false then
            if IsBoxClick(720/2-100, 10, 200, 40) then
                Game.showShop = true
            end
        else
            -- ALL SHOP BUTTONS
            -- Exit Shop

            if Player.lb >= 51 then
                if IsBoxClickDown(350,500,100,40) and Player.money >= (250 + (250 * Player.lb)) * 8-3000 then
                    local type = math.random(3)
                    if type == 1 then
                        Player.fps = Player.fps + 0.15
                        Player.rsps = Player.rsps + 0.15 * Player.qualityBoost
                    elseif type == 2 then
                        Player.fps = Player.fps + 0.35
                        Player.rsps = Player.rsps + 0.05 * Player.qualityBoost
                    elseif type == 3 then
                        Player.rsps = Player.rsps + 0.35 * Player.qualityBoost
                        Player.fps = Player.fps + 0.05
                    end
                    Player.lb = Player.lb + 1
                    Player.money = Player.money - (250 + (250 * Player.lb)) * 8-3000
                end
            end

            if IsBoxClick(720-40*2,40, 40, 40) then
                Game.showShop = false
            end
            if IsBoxClickDown(350,110,100,40) and Player.food >= 25 then
                Player.money = Player.money + 5
                Player.food = Player.food - 25
            end
            if IsBoxClick(550,110,100,40) and Player.food >= 25 then
                Player.money = Player.money + 5
                Player.food = Player.food - 25
            end
            if IsBoxClickDown(350,160,100,40) and Player.quality >= 5 then
                Player.money = Player.money + 5
                Player.quality = Player.quality - 5
            end
            if IsBoxClick(550,160,100,40) and Player.quality >= 5 then
                Player.money = Player.money + 5
                Player.quality = Player.quality - 5
            end
            if IsBoxClickDown(350,210,100,40) and Player.money >= 10 then
                Player.money = Player.money - 10
                Player.food = Player.food + 10
            end
            if IsBoxClickDown(350,260,100,40) and Player.money >= 50 * Player.humans then
                Player.money = Player.money - 50 * Player.humans
                Player.humans = Player.humans + 1
            end
        end
    
        IsPressed = false

    end
end



function quit()
    if Debug.programmer then
         
        print("Automaticly saving !")
        save()
    end

    io.close(World)
    print("Closed the File !")

    Data_Reader.write("data/land.dat", "data/stats.dat")
end

local function placeByType(x,y)
    
    local integerType = map_typeToNumber(grid[x][y].type)
    if integerType == "0" then
        if x-1 == Player.capitalX and y-1 == Player.capitalY then
            love.graphics.draw(Forest_Cap_GFX, (x-1)*(720 / divisions), (y-1)*(720 / divisions), 0, 0.55, 0.55)
        else
            love.graphics.draw(House_GFX, (x-1)*(720 / divisions), (y-1)*(720 / divisions), 0, 0.55, 0.55)
        end
    elseif integerType == "1" then
        if x-1 == Player.capitalX and y-1 == Player.capitalY then
            love.graphics.draw(Desert_Cap_GFX, (x-1)*(720 / divisions), (y-1)*(720 / divisions), 0, 0.55, 0.55)
        else
            love.graphics.draw(Pyramid_GFX, (x-1)*(720 / divisions), (y-1)*(720 / divisions), 0, 0.55, 0.55)
        end
    elseif integerType == "2" then
        if x-1 == Player.capitalX and y-1 == Player.capitalY then
            love.graphics.draw(Farm_Cap_GFX, (x-1)*(720 / divisions), (y-1)*(720 / divisions), 0, 0.55, 0.55)
        else
            love.graphics.draw(Farm_GFX, (x-1)*(720 / divisions), (y-1)*(720 / divisions), 0, 0.55, 0.55)
        end
    end
end

function draw()
    love.graphics.setFont(love.graphics.newFont(12))

    love.graphics.setColor(1,1,1)

    love.graphics.draw(map, 0, 0, 0, 0.72, 0.72)

    i = 0

    love.graphics.setColor(0,0,0,0.1)

    while i < 720 do
        i = i + (720 / divisions)
        --print(i)
        love.graphics.line(i,0,i,720)
        y = 0
        while y < 720 do
            y = y + (720 / divisions)
            love.graphics.line(0,y,720,y)
        end
    end
    love.graphics.setColor(0,1,0,0.5)

    love.graphics.rectangle("fill",xgrid * (720 / divisions), ygrid * (720 / divisions), 720 / divisions, 720 / divisions)

    love.graphics.setColor(0,0,1,0.1)
    if Player.capitalX ~= -1 and Player.capitalY ~= -1 then
        love.graphics.rectangle("fill",Player.capitalX * (720 / divisions),Player.capitalY * (720 / divisions), 720 / divisions, 720 / divisions)
    end

    love.graphics.setColor(1,1,0,.2)
    for x = 1, divisions, 1 do
        for y = 1, divisions, 1 do
            if grid[x][y].canBuild == true then
                love.graphics.rectangle("fill",x * (720 / divisions),y * (720 / divisions), 720 / divisions, 720 / divisions)
            end
        end
    end
    
    love.graphics.setColor(1,1,1,1)
    for x = 1, divisions, 1 do
        for y = 1, divisions, 1 do
            if grid[x][y].built == true then
                placeByType(x,y)
            end
        end
    end


    

    -------------------------------------------------------------------
    -- UI
    -------------------------------------------------------------------

    love.graphics.print(grid[xgrid+1][ygrid+1].type, 10,10)

    love.graphics.draw(Bread_GFX, 570-30, 10, 0, 0.3, 0.3)
    love.graphics.setColor(0,0,0,1)
    love.graphics.print("Food: "..Player.food, 620-30, 25)
    love.graphics.setColor(1,1,1,1)

    love.graphics.draw(QualityOfWapon_GFX, 570-30, 40, 0, 0.3, 0.3)
    love.graphics.setColor(0,0,0,1)
    love.graphics.print("Ressorces: "..Player.quality, 620-30, 55)
    love.graphics.setColor(1,1,1,1)

    love.graphics.draw(Human_GFX, 570-30, 70, 0, 0.3, 0.3)
    love.graphics.setColor(0,0,0,1)
    love.graphics.print("Peaple: "..Player.humans, 620-30, 85)
    love.graphics.setColor(1,1,1,1)

    love.graphics.draw(Coin_GFX, 570-30, 100, 0, 0.3, 0.3)
    love.graphics.setColor(0,0,0,1)
    love.graphics.print("Money: "..Player.money, 620-30, 115)
    love.graphics.setColor(1,1,1,1)

    love.graphics.draw(Farm_GFX, 570-30, 130, 0, 0.3, 0.3)
    love.graphics.setColor(0,0,0,1)
    love.graphics.print("Terrain: "..Player.lb, 620-30, 145)
    love.graphics.setColor(1,1,1,1)

    love.graphics.setColor(0, 196/255, 1, 1)
    if Game.showShop == false then
        love.graphics.rectangle("fill",720/2-100,10,200,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.setFont(love.graphics.newFont(20))
        love.graphics.print("SHOP", 720/2-30,20)
        
    else
        love.graphics.rectangle("fill", 40,40,720-40*2,720-40*2)
        love.graphics.setColor(1,0,0,1)
        love.graphics.rectangle("fill",720-40*2,40,40,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.setFont(love.graphics.newFont(20))
        love.graphics.print("X",720-40*2+13,50)
        love.graphics.print("SHOP", 720/2-30,50)
        
        love.graphics.print("SELL: ".. 25 .. " Food for 5$", 50, 120)
        love.graphics.setColor(0,158/255, 206/255, 1)
        love.graphics.rectangle("fill",350,110,100,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.print("SELL", 375,120)
        love.graphics.setColor(0,158/255, 206/255, 1)
        love.graphics.rectangle("fill",550,110,100,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.print("ALL", 580,120)

        love.graphics.print("SELL: ".. 5 .. " Ressources for 5$", 50, 170)
        love.graphics.setColor(0,158/255, 206/255, 1)
        love.graphics.rectangle("fill",350,160,100,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.print("SELL", 375,170)
        love.graphics.setColor(0,158/255, 206/255, 1)
        love.graphics.rectangle("fill",550,160,100,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.print("ALL", 580,170)

        love.graphics.print("BUY: 10$ 10 for food", 50, 220)
        love.graphics.setColor(0,158/255, 206/255, 1)
        love.graphics.rectangle("fill",350,210,100,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.print("BUY", 380,220)

        love.graphics.print("BUY: ".. 50 * Player.humans .."$ for 1 worker", 50, 270)
        love.graphics.setColor(0,158/255, 206/255, 1)
        love.graphics.rectangle("fill",350,260,100,40)
        love.graphics.setColor(1,1,1,1)
        love.graphics.print("BUY", 380,270)

        love.graphics.print("COST FOR LAND: ".. (250 + (250 * Player.lb)) * 8-3000 .."$", 250,600)

        if (Player.lb >= 51) then
            love.graphics.print("BUY: LAND", 50, 510)
            love.graphics.setColor(0,158/255, 206/255, 1)
            love.graphics.rectangle("fill",350,500,100,40)
            love.graphics.setColor(1,1,1,1)
            love.graphics.print("BUY", 380,510)
        end
    end
end